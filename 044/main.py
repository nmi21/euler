"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is
minimised; what is the value of D?

Method:
- first check the difference
- then check the sum
"""

# PENTAGONALS = []
#
#
# def add_pentagonal():
#     n = len(PENTAGONALS) + 1
#     p_n = n * (3 * n - 1) / 2
#     PENTAGONALS.append(int(p_n))
#
#
# add_pentagonal()
# add_pentagonal()
#
#
# def check_difference(pk, pj):
#     if abs(pk - pj) in PENTAGONALS:
#         return True
#     return False
#
#
# def check_sum(pk, pj):
#     while (pk + pj) > PENTAGONALS[-1]:
#         add_pentagonal()
#     if (pk + pj) in PENTAGONALS:
#         return True
#     return False
#
# D = None
# running = True
# k = 1
# while running:
#     print(k)
#     pk = PENTAGONALS[k]
#     for j in range(k):
#         pj = PENTAGONALS[j]
#         if check_difference(pk, pj) and check_sum(pk, pj):
#             D = {
#                 'difference': abs(pk - pj),
#                 'k': k,
#                 'pk': pk,
#                 'j': j,
#                 'pj': pj
#             }
#             print(D)
#
#     if D and D['difference'] < (PENTAGONALS[-1] - PENTAGONALS[-2]):
#         running = False
#
#     add_pentagonal()
#     k += 1
#
# print(D)

from math import sqrt


def pent(x):
    return int(x*(3*x - 1) / 2)


def is_pent(x):
    f = (.5 + sqrt(.25 + 6*x)) / 3
    if f - int(f) == 0:
        return True
    else:
        return False


D = None
k = 2
running = True
max_diff = None
while running:
    if k % 1000 == 0:
        print(f"k == {k}")
    for j in range(1, k):
        if is_pent(pent(k) - pent(j)) and is_pent(pent(k) + pent(j)):
            D = {
                'difference': abs(pent(k) - pent(j)),
                'k': k,
                'pk': pent(k),
                'j': j,
                'pj': pent(j)
            }
            running = False
    k += 1

print(D)

